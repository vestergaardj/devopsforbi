/*
Deployment script for WorldWideImporters_LTD

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "WorldWideImporters_LTD"
:setvar DefaultFilePrefix "WorldWideImporters_LTD"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                DATE_CORRELATION_OPTIMIZATION OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating Schema [Sequences]...';


GO
CREATE SCHEMA [Sequences]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating Schema [Sales]...';


GO
CREATE SCHEMA [Sales]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating Schema [Application]...';


GO
CREATE SCHEMA [Application]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating Table [Sales].[Orders]...';


GO
CREATE TABLE [Sales].[Orders] (
    [OrderID]                     INT            NOT NULL,
    [CustomerID]                  INT            NOT NULL,
    [SalespersonPersonID]         INT            NOT NULL,
    [PickedByPersonID]            INT            NULL,
    [ContactPersonID]             INT            NOT NULL,
    [BackorderOrderID]            INT            NULL,
    [OrderDate]                   DATE           NOT NULL,
    [ExpectedDeliveryDate]        DATE           NOT NULL,
    [CustomerPurchaseOrderNumber] NVARCHAR (20)  NULL,
    [IsUndersupplyBackordered]    BIT            NOT NULL,
    [Comments]                    NVARCHAR (MAX) NULL,
    [DeliveryInstructions]        NVARCHAR (MAX) NULL,
    [InternalComments]            NVARCHAR (MAX) NULL,
    [PickingCompletedWhen]        DATETIME2 (7)  NULL,
    [LastEditedBy]                INT            NOT NULL,
    [LastEditedWhen]              DATETIME2 (7)  NOT NULL,
    CONSTRAINT [PK_Sales_Orders] PRIMARY KEY CLUSTERED ([OrderID] ASC) ON [PRIMARY]
) ON [PRIMARY];


GO
PRINT N'Creating Table [Sales].[OrderLines]...';


GO
CREATE TABLE [Sales].[OrderLines] (
    [OrderLineID]          INT             NOT NULL,
    [OrderID]              INT             NOT NULL,
    [StockItemID]          INT             NOT NULL,
    [Description]          NVARCHAR (100)  NOT NULL,
    [PackageTypeID]        INT             NOT NULL,
    [Quantity]             INT             NOT NULL,
    [UnitPrice]            DECIMAL (18, 2) NULL,
    [TaxRate]              DECIMAL (18, 3) NOT NULL,
    [PickedQuantity]       INT             NOT NULL,
    [PickingCompletedWhen] DATETIME2 (7)   NULL,
    [LastEditedBy]         INT             NOT NULL,
    [LastEditedWhen]       DATETIME2 (7)   NOT NULL,
    CONSTRAINT [PK_Sales_OrderLines] PRIMARY KEY CLUSTERED ([OrderLineID] ASC) ON [PRIMARY]
) ON [PRIMARY];


GO
PRINT N'Creating Table [Sales].[Customers]...';


GO
CREATE TABLE [Sales].[Customers] (
    [CustomerID]                 INT                                         NOT NULL,
    [CustomerName]               NVARCHAR (100)                              NOT NULL,
    [BillToCustomerID]           INT                                         NOT NULL,
    [CustomerCategoryID]         INT                                         NOT NULL,
    [BuyingGroupID]              INT                                         NULL,
    [PrimaryContactPersonID]     INT                                         NOT NULL,
    [AlternateContactPersonID]   INT                                         NULL,
    [DeliveryMethodID]           INT                                         NOT NULL,
    [DeliveryCityID]             INT                                         NOT NULL,
    [PostalCityID]               INT                                         NOT NULL,
    [CreditLimit]                DECIMAL (18, 2)                             NULL,
    [AccountOpenedDate]          DATE                                        NOT NULL,
    [StandardDiscountPercentage] DECIMAL (18, 3)                             NOT NULL,
    [IsStatementSent]            BIT                                         NOT NULL,
    [IsOnCreditHold]             BIT                                         NOT NULL,
    [PaymentDays]                INT                                         NOT NULL,
    [PhoneNumber]                NVARCHAR (20)                               NOT NULL,
    [FaxNumber]                  NVARCHAR (20)                               NOT NULL,
    [DeliveryRun]                NVARCHAR (5)                                NULL,
    [RunPosition]                NVARCHAR (5)                                NULL,
    [WebsiteURL]                 NVARCHAR (256)                              NOT NULL,
    [DeliveryAddressLine1]       NVARCHAR (60)                               NOT NULL,
    [DeliveryAddressLine2]       NVARCHAR (60)                               NULL,
    [DeliveryPostalCode]         NVARCHAR (10)                               NOT NULL,
    [DeliveryLocation]           [sys].[geography]                           NULL,
    [PostalAddressLine1]         NVARCHAR (60)                               NOT NULL,
    [PostalAddressLine2]         NVARCHAR (60)                               NULL,
    [PostalPostalCode]           NVARCHAR (10)                               NOT NULL,
    [LastEditedBy]               INT                                         NOT NULL,
    [ValidFrom]                  DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [ValidTo]                    DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_Sales_Customers] PRIMARY KEY CLUSTERED ([CustomerID] ASC) ON [PRIMARY],
    CONSTRAINT [UQ_Sales_Customers_CustomerName] UNIQUE NONCLUSTERED ([CustomerName] ASC) ON [PRIMARY],
    PERIOD FOR SYSTEM_TIME ([ValidFrom], [ValidTo])
) ON [PRIMARY]
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[Sales].[Customers_Archive], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating Table [Sales].[Invoices]...';


GO
CREATE TABLE [Sales].[Invoices] (
    [InvoiceID]                   INT            NOT NULL,
    [CustomerID]                  INT            NOT NULL,
    [BillToCustomerID]            INT            NOT NULL,
    [OrderID]                     INT            NULL,
    [DeliveryMethodID]            INT            NOT NULL,
    [ContactPersonID]             INT            NOT NULL,
    [AccountsPersonID]            INT            NOT NULL,
    [SalespersonPersonID]         INT            NOT NULL,
    [PackedByPersonID]            INT            NOT NULL,
    [InvoiceDate]                 DATE           NOT NULL,
    [CustomerPurchaseOrderNumber] NVARCHAR (20)  NULL,
    [IsCreditNote]                BIT            NOT NULL,
    [CreditNoteReason]            NVARCHAR (MAX) NULL,
    [Comments]                    NVARCHAR (MAX) NULL,
    [DeliveryInstructions]        NVARCHAR (MAX) NULL,
    [InternalComments]            NVARCHAR (MAX) NULL,
    [TotalDryItems]               INT            NOT NULL,
    [TotalChillerItems]           INT            NOT NULL,
    [DeliveryRun]                 NVARCHAR (5)   NULL,
    [RunPosition]                 NVARCHAR (5)   NULL,
    [ReturnedDeliveryData]        NVARCHAR (MAX) NULL,
    [ConfirmedDeliveryTime]       AS             (TRY_CONVERT (DATETIME2 (7), json_value([ReturnedDeliveryData], N'$.DeliveredWhen'), (126))),
    [ConfirmedReceivedBy]         AS             (json_value([ReturnedDeliveryData], N'$.ReceivedBy')),
    [LastEditedBy]                INT            NOT NULL,
    [LastEditedWhen]              DATETIME2 (7)  NOT NULL,
    CONSTRAINT [PK_Sales_Invoices] PRIMARY KEY CLUSTERED ([InvoiceID] ASC) ON [PRIMARY]
) ON [PRIMARY];


GO
PRINT N'Creating Table [Application].[People_Archive]...';


GO
CREATE TABLE [Application].[People_Archive] (
    [PersonID]                INT             NOT NULL,
    [FullName]                NVARCHAR (50)   NOT NULL,
    [PreferredName]           NVARCHAR (50)   NOT NULL,
    [SearchName]              NVARCHAR (101)  NOT NULL,
    [IsPermittedToLogon]      BIT             NOT NULL,
    [LogonName]               NVARCHAR (50)   NULL,
    [IsExternalLogonProvider] BIT             NOT NULL,
    [HashedPassword]          VARBINARY (MAX) NULL,
    [IsSystemUser]            BIT             NOT NULL,
    [IsEmployee]              BIT             NOT NULL,
    [IsSalesperson]           BIT             NOT NULL,
    [UserPreferences]         NVARCHAR (MAX)  NULL,
    [PhoneNumber]             NVARCHAR (20)   NULL,
    [FaxNumber]               NVARCHAR (20)   NULL,
    [EmailAddress]            NVARCHAR (256)  NULL,
    [Photo]                   VARBINARY (MAX) NULL,
    [CustomFields]            NVARCHAR (MAX)  NULL,
    [OtherLanguages]          NVARCHAR (MAX)  NULL,
    [LastEditedBy]            INT             NOT NULL,
    [ValidFrom]               DATETIME2 (7)   NOT NULL,
    [ValidTo]                 DATETIME2 (7)   NOT NULL
) ON [PRIMARY];


GO
PRINT N'Creating Table [Application].[People]...';


GO
CREATE TABLE [Application].[People] (
    [PersonID]                INT                                         NOT NULL,
    [FullName]                NVARCHAR (50)                               NOT NULL,
    [PreferredName]           NVARCHAR (50)                               NOT NULL,
    [SearchName]              AS                                          (concat([PreferredName], N' ', [FullName])) PERSISTED NOT NULL,
    [IsPermittedToLogon]      BIT                                         NOT NULL,
    [LogonName]               NVARCHAR (50)                               NULL,
    [IsExternalLogonProvider] BIT                                         NOT NULL,
    [HashedPassword]          VARBINARY (MAX)                             NULL,
    [IsSystemUser]            BIT                                         NOT NULL,
    [IsEmployee]              BIT                                         NOT NULL,
    [IsSalesperson]           BIT                                         NOT NULL,
    [UserPreferences]         NVARCHAR (MAX)                              NULL,
    [PhoneNumber]             NVARCHAR (20)                               NULL,
    [FaxNumber]               NVARCHAR (20)                               NULL,
    [EmailAddress]            NVARCHAR (256)                              NULL,
    [Photo]                   VARBINARY (MAX)                             NULL,
    [CustomFields]            NVARCHAR (MAX)                              NULL,
    [OtherLanguages]          AS                                          (json_query([CustomFields], N'$.OtherLanguages')),
    [LastEditedBy]            INT                                         NOT NULL,
    [ValidFrom]               DATETIME2 (7) GENERATED ALWAYS AS ROW START NOT NULL,
    [ValidTo]                 DATETIME2 (7) GENERATED ALWAYS AS ROW END   NOT NULL,
    CONSTRAINT [PK_Application_People] PRIMARY KEY CLUSTERED ([PersonID] ASC) ON [PRIMARY],
    PERIOD FOR SYSTEM_TIME ([ValidFrom], [ValidTo])
) ON [PRIMARY]
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE=[Application].[People_Archive], DATA_CONSISTENCY_CHECK=ON));


GO
PRINT N'Creating Default Constraint [Sales].[DF_Sales_Orders_LastEditedWhen]...';


GO
ALTER TABLE [Sales].[Orders]
    ADD CONSTRAINT [DF_Sales_Orders_LastEditedWhen] DEFAULT (sysdatetime()) FOR [LastEditedWhen];


GO
PRINT N'Creating Default Constraint [Sales].[DF_Sales_OrderLines_LastEditedWhen]...';


GO
ALTER TABLE [Sales].[OrderLines]
    ADD CONSTRAINT [DF_Sales_OrderLines_LastEditedWhen] DEFAULT (sysdatetime()) FOR [LastEditedWhen];


GO
PRINT N'Creating Default Constraint [Sales].[DF_Sales_Invoices_LastEditedWhen]...';


GO
ALTER TABLE [Sales].[Invoices]
    ADD CONSTRAINT [DF_Sales_Invoices_LastEditedWhen] DEFAULT (sysdatetime()) FOR [LastEditedWhen];


GO
PRINT N'Creating Sequence [Sequences].[InvoiceID]...';


GO
CREATE SEQUENCE [Sequences].[InvoiceID]
    AS INT
    START WITH 70511
    INCREMENT BY 1
    MINVALUE -2147483648
    MAXVALUE 2147483647;


GO
PRINT N'Creating Sequence [Sequences].[OrderID]...';


GO
CREATE SEQUENCE [Sequences].[OrderID]
    AS INT
    START WITH 73596
    INCREMENT BY 1
    MINVALUE -2147483648
    MAXVALUE 2147483647;


GO
PRINT N'Creating Sequence [Sequences].[OrderLineID]...';


GO
CREATE SEQUENCE [Sequences].[OrderLineID]
    AS INT
    START WITH 231413
    INCREMENT BY 1
    MINVALUE -2147483648
    MAXVALUE 2147483647;


GO
PRINT N'Creating Sequence [Sequences].[CustomerID]...';


GO
CREATE SEQUENCE [Sequences].[CustomerID]
    AS INT
    START WITH 1062
    INCREMENT BY 1
    MINVALUE -2147483648
    MAXVALUE 2147483647;


GO
PRINT N'Creating Sequence [Sequences].[PersonID]...';


GO
CREATE SEQUENCE [Sequences].[PersonID]
    AS INT
    START WITH 3262
    INCREMENT BY 1
    MINVALUE -2147483648
    MAXVALUE 2147483647;


GO
PRINT N'Creating Default Constraint [Sales].[DF_Sales_Orders_OrderID]...';


GO
ALTER TABLE [Sales].[Orders]
    ADD CONSTRAINT [DF_Sales_Orders_OrderID] DEFAULT (NEXT VALUE FOR [Sequences].[OrderID]) FOR [OrderID];


GO
PRINT N'Creating Default Constraint [Sales].[DF_Sales_OrderLines_OrderLineID]...';


GO
ALTER TABLE [Sales].[OrderLines]
    ADD CONSTRAINT [DF_Sales_OrderLines_OrderLineID] DEFAULT (NEXT VALUE FOR [Sequences].[OrderLineID]) FOR [OrderLineID];


GO
PRINT N'Creating Default Constraint [Sales].[DF_Sales_Customers_CustomerID]...';


GO
ALTER TABLE [Sales].[Customers]
    ADD CONSTRAINT [DF_Sales_Customers_CustomerID] DEFAULT (NEXT VALUE FOR [Sequences].[CustomerID]) FOR [CustomerID];


GO
PRINT N'Creating Default Constraint [Sales].[DF_Sales_Invoices_InvoiceID]...';


GO
ALTER TABLE [Sales].[Invoices]
    ADD CONSTRAINT [DF_Sales_Invoices_InvoiceID] DEFAULT (NEXT VALUE FOR [Sequences].[InvoiceID]) FOR [InvoiceID];


GO
PRINT N'Creating Default Constraint [Application].[DF_Application_People_PersonID]...';


GO
ALTER TABLE [Application].[People]
    ADD CONSTRAINT [DF_Application_People_PersonID] DEFAULT (NEXT VALUE FOR [Sequences].[PersonID]) FOR [PersonID];


GO
PRINT N'Creating Foreign Key [Sales].[FK_Sales_Orders_Application_People]...';


GO
ALTER TABLE [Sales].[Orders]
    ADD CONSTRAINT [FK_Sales_Orders_Application_People] FOREIGN KEY ([LastEditedBy]) REFERENCES [Application].[People] ([PersonID]);


GO
PRINT N'Creating Foreign Key [Sales].[FK_Sales_Orders_BackorderOrderID_Sales_Orders]...';


GO
ALTER TABLE [Sales].[Orders]
    ADD CONSTRAINT [FK_Sales_Orders_BackorderOrderID_Sales_Orders] FOREIGN KEY ([BackorderOrderID]) REFERENCES [Sales].[Orders] ([OrderID]);


GO
PRINT N'Creating Foreign Key [Sales].[FK_Sales_Orders_ContactPersonID_Application_People]...';


GO
ALTER TABLE [Sales].[Orders]
    ADD CONSTRAINT [FK_Sales_Orders_ContactPersonID_Application_People] FOREIGN KEY ([ContactPersonID]) REFERENCES [Application].[People] ([PersonID]);


GO
PRINT N'Creating Foreign Key [Sales].[FK_Sales_Orders_CustomerID_Sales_Customers]...';


GO
ALTER TABLE [Sales].[Orders]
    ADD CONSTRAINT [FK_Sales_Orders_CustomerID_Sales_Customers] FOREIGN KEY ([CustomerID]) REFERENCES [Sales].[Customers] ([CustomerID]);


GO
PRINT N'Creating Foreign Key [Sales].[FK_Sales_Orders_PickedByPersonID_Application_People]...';


GO
ALTER TABLE [Sales].[Orders]
    ADD CONSTRAINT [FK_Sales_Orders_PickedByPersonID_Application_People] FOREIGN KEY ([PickedByPersonID]) REFERENCES [Application].[People] ([PersonID]);


GO
PRINT N'Creating Foreign Key [Sales].[FK_Sales_Orders_SalespersonPersonID_Application_People]...';


GO
ALTER TABLE [Sales].[Orders]
    ADD CONSTRAINT [FK_Sales_Orders_SalespersonPersonID_Application_People] FOREIGN KEY ([SalespersonPersonID]) REFERENCES [Application].[People] ([PersonID]);


GO
PRINT N'Creating Foreign Key [Sales].[FK_Sales_OrderLines_Application_People]...';


GO
ALTER TABLE [Sales].[OrderLines]
    ADD CONSTRAINT [FK_Sales_OrderLines_Application_People] FOREIGN KEY ([LastEditedBy]) REFERENCES [Application].[People] ([PersonID]);


GO
PRINT N'Creating Foreign Key [Sales].[FK_Sales_OrderLines_OrderID_Sales_Orders]...';


GO
ALTER TABLE [Sales].[OrderLines]
    ADD CONSTRAINT [FK_Sales_OrderLines_OrderID_Sales_Orders] FOREIGN KEY ([OrderID]) REFERENCES [Sales].[Orders] ([OrderID]);


GO
PRINT N'Creating Foreign Key [Sales].[FK_Sales_Customers_AlternateContactPersonID_Application_People]...';


GO
ALTER TABLE [Sales].[Customers]
    ADD CONSTRAINT [FK_Sales_Customers_AlternateContactPersonID_Application_People] FOREIGN KEY ([AlternateContactPersonID]) REFERENCES [Application].[People] ([PersonID]);


GO
PRINT N'Creating Foreign Key [Sales].[FK_Sales_Customers_Application_People]...';


GO
ALTER TABLE [Sales].[Customers]
    ADD CONSTRAINT [FK_Sales_Customers_Application_People] FOREIGN KEY ([LastEditedBy]) REFERENCES [Application].[People] ([PersonID]);


GO
PRINT N'Creating Foreign Key [Sales].[FK_Sales_Customers_BillToCustomerID_Sales_Customers]...';


GO
ALTER TABLE [Sales].[Customers]
    ADD CONSTRAINT [FK_Sales_Customers_BillToCustomerID_Sales_Customers] FOREIGN KEY ([BillToCustomerID]) REFERENCES [Sales].[Customers] ([CustomerID]);


GO
PRINT N'Creating Foreign Key [Sales].[FK_Sales_Customers_PrimaryContactPersonID_Application_People]...';


GO
ALTER TABLE [Sales].[Customers]
    ADD CONSTRAINT [FK_Sales_Customers_PrimaryContactPersonID_Application_People] FOREIGN KEY ([PrimaryContactPersonID]) REFERENCES [Application].[People] ([PersonID]);


GO
PRINT N'Creating Foreign Key [Sales].[FK_Sales_Invoices_AccountsPersonID_Application_People]...';


GO
ALTER TABLE [Sales].[Invoices]
    ADD CONSTRAINT [FK_Sales_Invoices_AccountsPersonID_Application_People] FOREIGN KEY ([AccountsPersonID]) REFERENCES [Application].[People] ([PersonID]);


GO
PRINT N'Creating Foreign Key [Sales].[FK_Sales_Invoices_Application_People]...';


GO
ALTER TABLE [Sales].[Invoices]
    ADD CONSTRAINT [FK_Sales_Invoices_Application_People] FOREIGN KEY ([LastEditedBy]) REFERENCES [Application].[People] ([PersonID]);


GO
PRINT N'Creating Foreign Key [Sales].[FK_Sales_Invoices_BillToCustomerID_Sales_Customers]...';


GO
ALTER TABLE [Sales].[Invoices]
    ADD CONSTRAINT [FK_Sales_Invoices_BillToCustomerID_Sales_Customers] FOREIGN KEY ([BillToCustomerID]) REFERENCES [Sales].[Customers] ([CustomerID]);


GO
PRINT N'Creating Foreign Key [Sales].[FK_Sales_Invoices_ContactPersonID_Application_People]...';


GO
ALTER TABLE [Sales].[Invoices]
    ADD CONSTRAINT [FK_Sales_Invoices_ContactPersonID_Application_People] FOREIGN KEY ([ContactPersonID]) REFERENCES [Application].[People] ([PersonID]);


GO
PRINT N'Creating Foreign Key [Sales].[FK_Sales_Invoices_CustomerID_Sales_Customers]...';


GO
ALTER TABLE [Sales].[Invoices]
    ADD CONSTRAINT [FK_Sales_Invoices_CustomerID_Sales_Customers] FOREIGN KEY ([CustomerID]) REFERENCES [Sales].[Customers] ([CustomerID]);


GO
PRINT N'Creating Foreign Key [Sales].[FK_Sales_Invoices_OrderID_Sales_Orders]...';


GO
ALTER TABLE [Sales].[Invoices]
    ADD CONSTRAINT [FK_Sales_Invoices_OrderID_Sales_Orders] FOREIGN KEY ([OrderID]) REFERENCES [Sales].[Orders] ([OrderID]);


GO
PRINT N'Creating Foreign Key [Sales].[FK_Sales_Invoices_PackedByPersonID_Application_People]...';


GO
ALTER TABLE [Sales].[Invoices]
    ADD CONSTRAINT [FK_Sales_Invoices_PackedByPersonID_Application_People] FOREIGN KEY ([PackedByPersonID]) REFERENCES [Application].[People] ([PersonID]);


GO
PRINT N'Creating Foreign Key [Sales].[FK_Sales_Invoices_SalespersonPersonID_Application_People]...';


GO
ALTER TABLE [Sales].[Invoices]
    ADD CONSTRAINT [FK_Sales_Invoices_SalespersonPersonID_Application_People] FOREIGN KEY ([SalespersonPersonID]) REFERENCES [Application].[People] ([PersonID]);


GO
PRINT N'Creating Foreign Key [Application].[FK_Application_People_Application_People]...';


GO
ALTER TABLE [Application].[People]
    ADD CONSTRAINT [FK_Application_People_Application_People] FOREIGN KEY ([LastEditedBy]) REFERENCES [Application].[People] ([PersonID]);


GO
PRINT N'Creating Check Constraint [Sales].[CK_Sales_Invoices_ReturnedDeliveryData_Must_Be_Valid_JSON]...';


GO
ALTER TABLE [Sales].[Invoices]
    ADD CONSTRAINT [CK_Sales_Invoices_ReturnedDeliveryData_Must_Be_Valid_JSON] CHECK (([ReturnedDeliveryData] IS NULL OR isjson([ReturnedDeliveryData])<>(0)));


GO
PRINT N'Creating Extended Property [Sales].[Orders].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Detail of customer orders', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Orders';


GO
PRINT N'Creating Extended Property [Sales].[Orders].[OrderID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Numeric ID used for reference to an order within the database', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Orders', @level2type = N'COLUMN', @level2name = N'OrderID';


GO
PRINT N'Creating Extended Property [Sales].[Orders].[CustomerID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Customer for this order', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Orders', @level2type = N'COLUMN', @level2name = N'CustomerID';


GO
PRINT N'Creating Extended Property [Sales].[Orders].[SalespersonPersonID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Salesperson for this order', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Orders', @level2type = N'COLUMN', @level2name = N'SalespersonPersonID';


GO
PRINT N'Creating Extended Property [Sales].[Orders].[PickedByPersonID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Person who picked this shipment', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Orders', @level2type = N'COLUMN', @level2name = N'PickedByPersonID';


GO
PRINT N'Creating Extended Property [Sales].[Orders].[ContactPersonID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Customer contact for this order', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Orders', @level2type = N'COLUMN', @level2name = N'ContactPersonID';


GO
PRINT N'Creating Extended Property [Sales].[Orders].[BackorderOrderID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'If this order is a backorder, this column holds the original order number', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Orders', @level2type = N'COLUMN', @level2name = N'BackorderOrderID';


GO
PRINT N'Creating Extended Property [Sales].[Orders].[OrderDate].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Date that this order was raised', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Orders', @level2type = N'COLUMN', @level2name = N'OrderDate';


GO
PRINT N'Creating Extended Property [Sales].[Orders].[ExpectedDeliveryDate].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Expected delivery date', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Orders', @level2type = N'COLUMN', @level2name = N'ExpectedDeliveryDate';


GO
PRINT N'Creating Extended Property [Sales].[Orders].[CustomerPurchaseOrderNumber].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Purchase Order Number received from customer', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Orders', @level2type = N'COLUMN', @level2name = N'CustomerPurchaseOrderNumber';


GO
PRINT N'Creating Extended Property [Sales].[Orders].[IsUndersupplyBackordered].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'If items cannot be supplied are they backordered?', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Orders', @level2type = N'COLUMN', @level2name = N'IsUndersupplyBackordered';


GO
PRINT N'Creating Extended Property [Sales].[Orders].[Comments].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Any comments related to this order (sent to customer)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Orders', @level2type = N'COLUMN', @level2name = N'Comments';


GO
PRINT N'Creating Extended Property [Sales].[Orders].[DeliveryInstructions].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Any comments related to order delivery (sent to customer)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Orders', @level2type = N'COLUMN', @level2name = N'DeliveryInstructions';


GO
PRINT N'Creating Extended Property [Sales].[Orders].[InternalComments].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Any internal comments related to this order (not sent to the customer)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Orders', @level2type = N'COLUMN', @level2name = N'InternalComments';


GO
PRINT N'Creating Extended Property [Sales].[Orders].[PickingCompletedWhen].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'When was picking of the entire order completed?', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Orders', @level2type = N'COLUMN', @level2name = N'PickingCompletedWhen';


GO
PRINT N'Creating Extended Property [Sales].[OrderLines].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Detail lines from customer orders', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'OrderLines';


GO
PRINT N'Creating Extended Property [Sales].[OrderLines].[OrderLineID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Numeric ID used for reference to a line on an Order within the database', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'OrderLines', @level2type = N'COLUMN', @level2name = N'OrderLineID';


GO
PRINT N'Creating Extended Property [Sales].[OrderLines].[OrderID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Order that this line is associated with', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'OrderLines', @level2type = N'COLUMN', @level2name = N'OrderID';


GO
PRINT N'Creating Extended Property [Sales].[OrderLines].[StockItemID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Stock item for this order line (FK not indexed as separate index exists)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'OrderLines', @level2type = N'COLUMN', @level2name = N'StockItemID';


GO
PRINT N'Creating Extended Property [Sales].[OrderLines].[Description].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Description of the item supplied (Usually the stock item name but can be overridden)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'OrderLines', @level2type = N'COLUMN', @level2name = N'Description';


GO
PRINT N'Creating Extended Property [Sales].[OrderLines].[PackageTypeID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Type of package to be supplied', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'OrderLines', @level2type = N'COLUMN', @level2name = N'PackageTypeID';


GO
PRINT N'Creating Extended Property [Sales].[OrderLines].[Quantity].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Quantity to be supplied', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'OrderLines', @level2type = N'COLUMN', @level2name = N'Quantity';


GO
PRINT N'Creating Extended Property [Sales].[OrderLines].[UnitPrice].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Unit price to be charged', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'OrderLines', @level2type = N'COLUMN', @level2name = N'UnitPrice';


GO
PRINT N'Creating Extended Property [Sales].[OrderLines].[TaxRate].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Tax rate to be applied', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'OrderLines', @level2type = N'COLUMN', @level2name = N'TaxRate';


GO
PRINT N'Creating Extended Property [Sales].[OrderLines].[PickedQuantity].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Quantity picked from stock', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'OrderLines', @level2type = N'COLUMN', @level2name = N'PickedQuantity';


GO
PRINT N'Creating Extended Property [Sales].[OrderLines].[PickingCompletedWhen].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'When was picking of this line completed?', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'OrderLines', @level2type = N'COLUMN', @level2name = N'PickingCompletedWhen';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Main entity tables for customers (organizations or individuals)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[CustomerID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Numeric ID used for reference to a customer within the database', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'CustomerID';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[CustomerName].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Customer''s full name (usually a trading name)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'CustomerName';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[BillToCustomerID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Customer that this is billed to (usually the same customer but can be another parent company)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'BillToCustomerID';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[CustomerCategoryID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Customer''s category', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'CustomerCategoryID';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[BuyingGroupID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Customer''s buying group (optional)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'BuyingGroupID';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[PrimaryContactPersonID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Primary contact', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'PrimaryContactPersonID';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[AlternateContactPersonID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Alternate contact', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'AlternateContactPersonID';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[DeliveryMethodID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Standard delivery method for stock items sent to this customer', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'DeliveryMethodID';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[DeliveryCityID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'ID of the delivery city for this address', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'DeliveryCityID';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[PostalCityID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'ID of the postal city for this address', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'PostalCityID';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[CreditLimit].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Credit limit for this customer (NULL if unlimited)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'CreditLimit';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[AccountOpenedDate].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Date this customer account was opened', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'AccountOpenedDate';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[StandardDiscountPercentage].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Standard discount offered to this customer', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'StandardDiscountPercentage';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[IsStatementSent].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Is a statement sent to this customer? (Or do they just pay on each invoice?)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'IsStatementSent';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[IsOnCreditHold].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Is this customer on credit hold? (Prevents further deliveries to this customer)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'IsOnCreditHold';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[PaymentDays].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Number of days for payment of an invoice (ie payment terms)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'PaymentDays';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[PhoneNumber].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Phone number', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'PhoneNumber';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[FaxNumber].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Fax number  ', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'FaxNumber';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[DeliveryRun].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Normal delivery run for this customer', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'DeliveryRun';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[RunPosition].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Normal position in the delivery run for this customer', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'RunPosition';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[WebsiteURL].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'URL for the website for this customer', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'WebsiteURL';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[DeliveryAddressLine1].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'First delivery address line for the customer', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'DeliveryAddressLine1';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[DeliveryAddressLine2].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Second delivery address line for the customer', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'DeliveryAddressLine2';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[DeliveryPostalCode].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Delivery postal code for the customer', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'DeliveryPostalCode';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[DeliveryLocation].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Geographic location for the customer''s office/warehouse', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'DeliveryLocation';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[PostalAddressLine1].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'First postal address line for the customer', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'PostalAddressLine1';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[PostalAddressLine2].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Second postal address line for the customer', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'PostalAddressLine2';


GO
PRINT N'Creating Extended Property [Sales].[Customers].[PostalPostalCode].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Postal code for the customer when sending by mail', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Customers', @level2type = N'COLUMN', @level2name = N'PostalPostalCode';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Details of customer invoices', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[InvoiceID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Numeric ID used for reference to an invoice within the database', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'InvoiceID';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[CustomerID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Customer for this invoice', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'CustomerID';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[BillToCustomerID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Bill to customer for this invoice (invoices might be billed to a head office)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'BillToCustomerID';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[OrderID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Sales order (if any) for this invoice', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'OrderID';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[DeliveryMethodID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'How these stock items are beign delivered', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'DeliveryMethodID';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[ContactPersonID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Customer contact for this invoice', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'ContactPersonID';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[AccountsPersonID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Customer accounts contact for this invoice', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'AccountsPersonID';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[SalespersonPersonID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Salesperson for this invoice', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'SalespersonPersonID';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[PackedByPersonID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Person who packed this shipment (or checked the packing)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'PackedByPersonID';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[InvoiceDate].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Date that this invoice was raised', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'InvoiceDate';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[CustomerPurchaseOrderNumber].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Purchase Order Number received from customer', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'CustomerPurchaseOrderNumber';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[IsCreditNote].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Is this a credit note (rather than an invoice)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'IsCreditNote';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[CreditNoteReason].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Reason that this credit note needed to be generated (if applicable)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'CreditNoteReason';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[Comments].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Any comments related to this invoice (sent to customer)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'Comments';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[DeliveryInstructions].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Any comments related to delivery (sent to customer)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'DeliveryInstructions';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[InternalComments].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Any internal comments related to this invoice (not sent to the customer)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'InternalComments';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[TotalDryItems].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Total number of dry packages (information for the delivery driver)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'TotalDryItems';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[TotalChillerItems].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Total number of chiller packages (information for the delivery driver)', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'TotalChillerItems';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[DeliveryRun].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Delivery run for this shipment', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'DeliveryRun';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[RunPosition].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Position in the delivery run for this shipment', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'RunPosition';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[ReturnedDeliveryData].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'JSON-structured data returned from delivery devices for deliveries made directly by the organization', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'ReturnedDeliveryData';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[ConfirmedDeliveryTime].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Confirmed delivery date and time promoted from JSON delivery data', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'ConfirmedDeliveryTime';


GO
PRINT N'Creating Extended Property [Sales].[Invoices].[ConfirmedReceivedBy].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Confirmed receiver promoted from JSON delivery data', @level0type = N'SCHEMA', @level0name = N'Sales', @level1type = N'TABLE', @level1name = N'Invoices', @level2type = N'COLUMN', @level2name = N'ConfirmedReceivedBy';


GO
PRINT N'Creating Extended Property [Application].[People].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'People known to the application (staff, customer contacts, supplier contacts)', @level0type = N'SCHEMA', @level0name = N'Application', @level1type = N'TABLE', @level1name = N'People';


GO
PRINT N'Creating Extended Property [Application].[People].[PersonID].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Numeric ID used for reference to a person within the database', @level0type = N'SCHEMA', @level0name = N'Application', @level1type = N'TABLE', @level1name = N'People', @level2type = N'COLUMN', @level2name = N'PersonID';


GO
PRINT N'Creating Extended Property [Application].[People].[FullName].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Full name for this person', @level0type = N'SCHEMA', @level0name = N'Application', @level1type = N'TABLE', @level1name = N'People', @level2type = N'COLUMN', @level2name = N'FullName';


GO
PRINT N'Creating Extended Property [Application].[People].[PreferredName].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Name that this person prefers to be called', @level0type = N'SCHEMA', @level0name = N'Application', @level1type = N'TABLE', @level1name = N'People', @level2type = N'COLUMN', @level2name = N'PreferredName';


GO
PRINT N'Creating Extended Property [Application].[People].[SearchName].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Name to build full text search on (computed column)', @level0type = N'SCHEMA', @level0name = N'Application', @level1type = N'TABLE', @level1name = N'People', @level2type = N'COLUMN', @level2name = N'SearchName';


GO
PRINT N'Creating Extended Property [Application].[People].[IsPermittedToLogon].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Is this person permitted to log on?', @level0type = N'SCHEMA', @level0name = N'Application', @level1type = N'TABLE', @level1name = N'People', @level2type = N'COLUMN', @level2name = N'IsPermittedToLogon';


GO
PRINT N'Creating Extended Property [Application].[People].[LogonName].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Person''s system logon name', @level0type = N'SCHEMA', @level0name = N'Application', @level1type = N'TABLE', @level1name = N'People', @level2type = N'COLUMN', @level2name = N'LogonName';


GO
PRINT N'Creating Extended Property [Application].[People].[IsExternalLogonProvider].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Is logon token provided by an external system?', @level0type = N'SCHEMA', @level0name = N'Application', @level1type = N'TABLE', @level1name = N'People', @level2type = N'COLUMN', @level2name = N'IsExternalLogonProvider';


GO
PRINT N'Creating Extended Property [Application].[People].[HashedPassword].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Hash of password for users without external logon tokens', @level0type = N'SCHEMA', @level0name = N'Application', @level1type = N'TABLE', @level1name = N'People', @level2type = N'COLUMN', @level2name = N'HashedPassword';


GO
PRINT N'Creating Extended Property [Application].[People].[IsSystemUser].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Is the currently permitted to make online access?', @level0type = N'SCHEMA', @level0name = N'Application', @level1type = N'TABLE', @level1name = N'People', @level2type = N'COLUMN', @level2name = N'IsSystemUser';


GO
PRINT N'Creating Extended Property [Application].[People].[IsEmployee].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Is this person an employee?', @level0type = N'SCHEMA', @level0name = N'Application', @level1type = N'TABLE', @level1name = N'People', @level2type = N'COLUMN', @level2name = N'IsEmployee';


GO
PRINT N'Creating Extended Property [Application].[People].[IsSalesperson].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Is this person a staff salesperson?', @level0type = N'SCHEMA', @level0name = N'Application', @level1type = N'TABLE', @level1name = N'People', @level2type = N'COLUMN', @level2name = N'IsSalesperson';


GO
PRINT N'Creating Extended Property [Application].[People].[UserPreferences].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'User preferences related to the website (holds JSON data)', @level0type = N'SCHEMA', @level0name = N'Application', @level1type = N'TABLE', @level1name = N'People', @level2type = N'COLUMN', @level2name = N'UserPreferences';


GO
PRINT N'Creating Extended Property [Application].[People].[PhoneNumber].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Phone number', @level0type = N'SCHEMA', @level0name = N'Application', @level1type = N'TABLE', @level1name = N'People', @level2type = N'COLUMN', @level2name = N'PhoneNumber';


GO
PRINT N'Creating Extended Property [Application].[People].[FaxNumber].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Fax number  ', @level0type = N'SCHEMA', @level0name = N'Application', @level1type = N'TABLE', @level1name = N'People', @level2type = N'COLUMN', @level2name = N'FaxNumber';


GO
PRINT N'Creating Extended Property [Application].[People].[EmailAddress].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Email address for this person', @level0type = N'SCHEMA', @level0name = N'Application', @level1type = N'TABLE', @level1name = N'People', @level2type = N'COLUMN', @level2name = N'EmailAddress';


GO
PRINT N'Creating Extended Property [Application].[People].[Photo].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Photo of this person', @level0type = N'SCHEMA', @level0name = N'Application', @level1type = N'TABLE', @level1name = N'People', @level2type = N'COLUMN', @level2name = N'Photo';


GO
PRINT N'Creating Extended Property [Application].[People].[CustomFields].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Custom fields for employees and salespeople', @level0type = N'SCHEMA', @level0name = N'Application', @level1type = N'TABLE', @level1name = N'People', @level2type = N'COLUMN', @level2name = N'CustomFields';


GO
PRINT N'Creating Extended Property [Application].[People].[OtherLanguages].[Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'Description', @value = N'Other languages spoken (computed column from custom fields)', @level0type = N'SCHEMA', @level0name = N'Application', @level1type = N'TABLE', @level1name = N'People', @level2type = N'COLUMN', @level2name = N'OtherLanguages';


GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
